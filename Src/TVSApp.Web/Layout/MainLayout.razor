@inject IBrowserViewportService BrowserViewportService
@using TVSApp.Web.Themes
@inherits LayoutComponentBase
<MudThemeProvider Theme="MudThemes.MyThemes"/>
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar  Elevation="2" Color="Color.Secondary">
        <div class="flex flex-row w-full justify-between">
            <MudIconButton Size="Size.Large" Onclick="ToggleDrawer" Icon="@Icons.Material.Filled.Menu" Color="Color.Primary"/>
        </div>
    </MudAppBar>
    <MudDrawer Color="Color.Secondary" @bind-Open="_drawer">
        <div class="flex justify-center flex-col w-full">
            <div class="flex self-center flex-col w-[80%] h-[90%] mt-[20px] mb-[100px] gap-4">
                <img src="/img/tvs-logo.png" class="w-[80%] self-center" alt="logo"/>
                <MudDivider Class="mb-[70px]" />
            </div>
            <div class="flex self-center flex-col w-[100%] h-[90%] mt-[20px] gap-4">
                <MudNavMenu Dense="false" Rounded="true" Margin="Margin.Dense" Color="Color.Primary" Class="mud-width-full">
                    <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard" IconColor="Color.Primary"><p class="font-sans text-titlecolor text-base font-bold">Gerenciar</p></MudNavLink>
                    <MudNavLink Href="/criar-os" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Add" IconColor="Color.Primary"><p class="font-sans text-titlecolor text-base font-bold">Adicionar OS</p></MudNavLink>
                    <MudNavLink Href="/vender" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Sell" IconColor="Color.Primary"><p class="font-sans text-titlecolor text-base font-bold">Vender</p></MudNavLink>
                    <MudNavLink Href="/buscar-os" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Search" IconColor="Color.Primary"><p class="font-sans text-titlecolor text-base font-bold">Buscar OS</p></MudNavLink>
                    <MudNavLink Href="/geral" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Settings" IconColor="Color.Primary"><p class="font-sans text-titlecolor text-base font-bold">Geral</p></MudNavLink>
                    <MudNavLink Href="/notificacoes" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Notifications" IconColor="Color.Primary"><p class="font-sans text-titlecolor text-base font-bold">Notificações</p></MudNavLink>
                </MudNavMenu>
            </div>
        </div>
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code
{
    private bool _drawer  = true;
    private bool _isInitialized = false;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_isInitialized)
        {
            _isInitialized = true;
            var isSmallScreen = await BrowserViewportService.IsBreakpointWithinReferenceSizeAsync(Breakpoint.Md, Breakpoint.Xs);
            _drawer = !isSmallScreen;
            StateHasChanged();
        }
    }

    private async void OnResized(object sender, BrowserViewportEventArgs e)
    {
        var isSmallScreen = await BrowserViewportService.IsBreakpointWithinReferenceSizeAsync(Breakpoint.Md, Breakpoint.Xs);
        _drawer = !isSmallScreen;
        StateHasChanged();
    }

    private void ToggleDrawer()
    {
        _drawer = !_drawer;
    }
}
